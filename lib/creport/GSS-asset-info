#!/bin/ksh

# Characteristics about host

#cat $0 | clush -Nb "$@" /bin/ksh 

# creport options
## clushopt -NLq
## post sed -e 's/^  //'
## title 


GSS="IRP Collaborative Research Services"

# Over all specified systems.
#if [ $# != 0 ] 
#then
	#cat $0 | clush -Nb "$@" /bin/ksh 2>/dev/null
	#exit 0
#fi

##################### Payload ############################

linejoin () { sort | paste -s '-d ' | sed -e "s/^/$1	/"; }

# Names
hostname -s | linejoin DCBhost
hostname -f | linejoin Hostname
{ 
	pgrep smbd >/dev/null && hostname -s || echo N/A 
} | linejoin NETBIOS-Name 

# Addresses
{
ip -4 -o a | sed 1d | sed -n -e 's!/.*!!' -e 's/^.*inet6* //p' 
ip -6 -o a | sed 1d | sed -n -e 's!/.*!!' -e 's/^.*inet6* //p' | egrep -v fe80::
} | linejoin IP_Address

ip -0 -o a | sed 1d | sed -n -e 's/ brd .*//' -e 's/^.*link.ether //p' | linejoin MAC_Address

# Product, Versions, Patch_Level
lsb_release -si | sed -e 's/RedHat[^ ]*/RedHat/' | linejoin Product
lsb_release -sr | sed -e 's/\..*//' | linejoin Version
lsb_release -sr | linejoin Patch_Level

# Licence
{
case $(lsb_release -sd) in
	*Red\ Hat*) echo Commercial ;;
	*) echo Free  ;;
esac
} | linejoin License_Type

# Maintenance
echo Current | linejoin Maintenance_Status

# URLs
if pgrep httpd >/dev/null
then
	sed -n -e 's/^[[:space:]]*servername[[:space:]]*//ip' /etc/httpd/conf.d/*.conf | sort | uniq | sed -e 's!^!https://!'
else
	echo N/A
fi | linejoin URL

# Description
VM=$({ virt-what 2>/dev/null || echo unknown ; } | egrep . || echo real;)
CPUS=$(lscpu | sed -n -e 's/^CPU.s.:[[:space:]]*//p')
#MEM=$(free -h | sed -n -e 's/Mem:[[:space:]]*//p' | sed -e 's/[[:space:]].*//')
MEM=$(dmidecode --type memory | sed -n -e 1i0 -e 's/Size: \([0-9]*\) MB/\1 + /p' -e '$a1024 / p' | dc)

echo "$VM $CPUS cpus ${MEM}GB RAM" | linejoin Description

echo Asset_Name $(hostname -s)

# VM support
if [ "$VM" != "real" ]
then
	echo server | linejoin Type
	echo VM | linejoin Vendor
	echo VM | linejoin Model
	dmidecode -s system-uuid | linejoin Serial_Number
fi

# VMs present
virsh list --name | sort | linejoin 'Virtual_Machines'

# Extras
#echo Entity_Name $GSS
#echo Parent_Component N/A
#echo Parent_Asset N/A
#echo Parent_Entity_Name N/A
#echo 'IP_Address_Range_(Start)' -
#echo 'IP_Address_Range_(End)' -

# Must be a newline at the end.
echo

